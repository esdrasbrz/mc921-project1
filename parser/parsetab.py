
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQUALDIFFERENTleftBIGGERBIGGER_EQUALSMALLERSMALLER_EQUALleftPLUSMINUSleftTIMESDIVIDEMODAND ASSERT ASSIGN ASSIGN_DIVIDE ASSIGN_MINUS ASSIGN_PLUS ASSIGN_REMAINDER ASSIGN_TIMES BIGGER BIGGER_EQUAL BREAK CCOMMENT CHAR COMMA DIFFERENT DIVIDE ELSE EQUAL FLOAT FLOAT_CONST FOR ID IF INT INT_CONST LBRACES LBRACKET LPAREN MINUS MINUS_MINUS MOD NOT NUMBER OR PLUS PLUS_PLUS PRINT QUESTION RBRACES RBRACKET READ RETURN RPAREN SEMI SMALLER SMALLER_EQUAL STRING_CONST TIMES UCCCOMMENT UPPERSAND VOID WHILE program  : global_declaration_list\n         global_declaration_list : global_declaration\n                                    | global_declaration_list global_declaration\n         global_declaration : postfix_expression\n                               | type_specifier\n                               | assignment_operator\n                               | cast_expression\n                               | unary_expression\n                               | binary_expression\n                               | constant_expression\n         postfix_expression : primary_expression\n         postfix_expression : postfix_expression PLUS_PLUS\n                            | postfix_expression MINUS_MINUS\n         primary_expression : identifier\n                               | constant\n         cast_expression : postfix_expression\n         cast_expression : LPAREN type_specifier RPAREN cast_expression\n         unary_expression : postfix_expression\n         unary_expression    : PLUS_PLUS unary_expression\n                                | MINUS_MINUS unary_expression\n                                | unary_operator cast_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression SMALLER binary_expression\n                                | binary_expression SMALLER_EQUAL binary_expression\n                                | binary_expression BIGGER binary_expression\n                                | binary_expression BIGGER_EQUAL binary_expression\n                                | binary_expression EQUAL binary_expression\n                                | binary_expression DIFFERENT binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n         constant_expression    : binary_expression\n         identifier  : ID\n         unary_operator : UPPERSAND\n                           | TIMES\n                           | PLUS\n                           | MINUS\n                           | NOT\n         type_specifier : VOID\n                           | CHAR\n                           | INT\n                           | FLOAT\n         assignment_operator : ASSIGN\n                                | ASSIGN_TIMES\n                                | ASSIGN_DIVIDE\n                                | ASSIGN_REMAINDER\n                                | ASSIGN_PLUS\n                                | ASSIGN_MINUS\n         constant : INT_CONST\n         constant : FLOAT_CONST\n         constant : STRING_CONST\n        '
    
_lr_action_items = {'VOID':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,18,19,20,21,22,23,24,29,30,33,34,35,36,37,38,39,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[14,14,-2,-4,-5,-6,-7,-8,-9,-10,-11,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,14,-14,-15,-37,-53,-54,-55,-3,-12,-13,-19,-18,-20,-21,-16,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-17,]),'CHAR':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,18,19,20,21,22,23,24,29,30,33,34,35,36,37,38,39,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[15,15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,15,-14,-15,-37,-53,-54,-55,-3,-12,-13,-19,-18,-20,-21,-16,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-17,]),'INT':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,18,19,20,21,22,23,24,29,30,33,34,35,36,37,38,39,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[16,16,-2,-4,-5,-6,-7,-8,-9,-10,-11,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,16,-14,-15,-37,-53,-54,-55,-3,-12,-13,-19,-18,-20,-21,-16,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-17,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,18,19,20,21,22,23,24,29,30,33,34,35,36,37,38,39,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[17,17,-2,-4,-5,-6,-7,-8,-9,-10,-11,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,17,-14,-15,-37,-53,-54,-55,-3,-12,-13,-19,-18,-20,-21,-16,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-17,]),'ASSIGN':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,18,19,20,21,22,23,29,30,33,34,35,36,37,38,39,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[18,18,-2,-4,-5,-6,-7,-8,-9,-10,-11,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-14,-15,-37,-53,-54,-55,-3,-12,-13,-19,-18,-20,-21,-16,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-17,]),'ASSIGN_TIMES':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,18,19,20,21,22,23,29,30,33,34,35,36,37,38,39,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[19,19,-2,-4,-5,-6,-7,-8,-9,-10,-11,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-14,-15,-37,-53,-54,-55,-3,-12,-13,-19,-18,-20,-21,-16,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-17,]),'ASSIGN_DIVIDE':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,18,19,20,21,22,23,29,30,33,34,35,36,37,38,39,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[20,20,-2,-4,-5,-6,-7,-8,-9,-10,-11,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-14,-15,-37,-53,-54,-55,-3,-12,-13,-19,-18,-20,-21,-16,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-17,]),'ASSIGN_REMAINDER':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,18,19,20,21,22,23,29,30,33,34,35,36,37,38,39,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[21,21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-14,-15,-37,-53,-54,-55,-3,-12,-13,-19,-18,-20,-21,-16,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-17,]),'ASSIGN_PLUS':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,18,19,20,21,22,23,29,30,33,34,35,36,37,38,39,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[22,22,-2,-4,-5,-6,-7,-8,-9,-10,-11,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-14,-15,-37,-53,-54,-55,-3,-12,-13,-19,-18,-20,-21,-16,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-17,]),'ASSIGN_MINUS':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,18,19,20,21,22,23,29,30,33,34,35,36,37,38,39,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[23,23,-2,-4,-5,-6,-7,-8,-9,-10,-11,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-14,-15,-37,-53,-54,-55,-3,-12,-13,-19,-18,-20,-21,-16,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-17,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,],[24,24,-2,-4,-5,-6,-7,-8,-9,-10,-11,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,24,-39,-40,-41,-14,-15,-38,-42,-37,-53,-54,-55,-3,-12,-13,24,24,24,24,24,24,24,24,24,24,24,24,24,-19,-18,-20,-21,-16,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,24,-17,]),'PLUS_PLUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,29,30,33,34,35,36,37,38,39,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[12,12,-2,38,-5,-6,-7,-8,-9,-10,-11,12,12,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-14,-15,-37,-53,-54,-55,-3,-12,-13,-19,38,-20,-21,38,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-17,]),'MINUS_MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,29,30,33,34,35,36,37,38,39,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[13,13,-2,39,-5,-6,-7,-8,-9,-10,-11,13,13,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-14,-15,-37,-53,-54,-55,-3,-12,-13,-19,39,-20,-21,39,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-17,]),'UPPERSAND':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,29,30,33,34,35,36,37,38,39,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[31,31,-2,-4,-5,-6,-7,-8,-9,-10,-11,31,31,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-14,-15,-37,-53,-54,-55,-3,-12,-13,-19,-18,-20,-21,-16,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-17,]),'TIMES':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,29,30,33,34,35,36,37,38,39,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[26,26,-2,-4,-5,-6,-7,-8,40,-10,-11,26,26,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-14,-15,-37,-53,-54,-55,-3,-12,-13,-19,-18,-20,-21,-16,-23,-22,-24,-25,40,40,40,40,40,40,40,40,40,40,-17,]),'PLUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,29,30,33,34,35,36,37,38,39,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[27,27,-2,-4,-5,-6,-7,-8,43,-10,-11,27,27,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-14,-15,-37,-53,-54,-55,-3,-12,-13,-19,-18,-20,-21,-16,-23,-22,-24,-25,-26,-27,43,43,43,43,43,43,43,43,-17,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,29,30,33,34,35,36,37,38,39,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[28,28,-2,-4,-5,-6,-7,-8,44,-10,-11,28,28,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-14,-15,-37,-53,-54,-55,-3,-12,-13,-19,-18,-20,-21,-16,-23,-22,-24,-25,-26,-27,44,44,44,44,44,44,44,44,-17,]),'NOT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,29,30,33,34,35,36,37,38,39,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[32,32,-2,-4,-5,-6,-7,-8,-9,-10,-11,32,32,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-14,-15,-37,-53,-54,-55,-3,-12,-13,-19,-18,-20,-21,-16,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-17,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,],[33,33,-2,-4,-5,-6,-7,-8,-9,-10,-11,33,33,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,33,-39,-40,-41,-14,-15,-38,-42,-37,-53,-54,-55,-3,-12,-13,33,33,33,33,33,33,33,33,33,33,33,33,33,-19,-18,-20,-21,-16,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,33,-17,]),'INT_CONST':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,],[34,34,-2,-4,-5,-6,-7,-8,-9,-10,-11,34,34,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,34,-39,-40,-41,-14,-15,-38,-42,-37,-53,-54,-55,-3,-12,-13,34,34,34,34,34,34,34,34,34,34,34,34,34,-19,-18,-20,-21,-16,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,34,-17,]),'FLOAT_CONST':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,],[35,35,-2,-4,-5,-6,-7,-8,-9,-10,-11,35,35,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,35,-39,-40,-41,-14,-15,-38,-42,-37,-53,-54,-55,-3,-12,-13,35,35,35,35,35,35,35,35,35,35,35,35,35,-19,-18,-20,-21,-16,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,35,-17,]),'STRING_CONST':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,],[36,36,-2,-4,-5,-6,-7,-8,-9,-10,-11,36,36,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,36,-39,-40,-41,-14,-15,-38,-42,-37,-53,-54,-55,-3,-12,-13,36,36,36,36,36,36,36,36,36,36,36,36,36,-19,-18,-20,-21,-16,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,36,-17,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,14,15,16,17,18,19,20,21,22,23,29,30,33,34,35,36,37,38,39,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-14,-15,-37,-53,-54,-55,-3,-12,-13,-19,-18,-20,-21,-16,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-17,]),'DIVIDE':([4,7,9,11,29,30,33,34,35,36,38,39,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[-16,-22,41,-11,-14,-15,-37,-53,-54,-55,-12,-13,-16,-23,-22,-24,-25,41,41,41,41,41,41,41,41,41,41,-17,]),'MOD':([4,7,9,11,29,30,33,34,35,36,38,39,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[-16,-22,42,-11,-14,-15,-37,-53,-54,-55,-12,-13,-16,-23,-22,-24,-25,42,42,42,42,42,42,42,42,42,42,-17,]),'SMALLER':([4,7,9,11,29,30,33,34,35,36,38,39,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[-16,-22,45,-11,-14,-15,-37,-53,-54,-55,-12,-13,-16,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,45,45,45,45,-17,]),'SMALLER_EQUAL':([4,7,9,11,29,30,33,34,35,36,38,39,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[-16,-22,46,-11,-14,-15,-37,-53,-54,-55,-12,-13,-16,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,46,46,46,46,-17,]),'BIGGER':([4,7,9,11,29,30,33,34,35,36,38,39,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[-16,-22,47,-11,-14,-15,-37,-53,-54,-55,-12,-13,-16,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,47,47,47,47,-17,]),'BIGGER_EQUAL':([4,7,9,11,29,30,33,34,35,36,38,39,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[-16,-22,48,-11,-14,-15,-37,-53,-54,-55,-12,-13,-16,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,48,48,48,48,-17,]),'EQUAL':([4,7,9,11,29,30,33,34,35,36,38,39,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[-16,-22,49,-11,-14,-15,-37,-53,-54,-55,-12,-13,-16,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,49,49,-17,]),'DIFFERENT':([4,7,9,11,29,30,33,34,35,36,38,39,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[-16,-22,50,-11,-14,-15,-37,-53,-54,-55,-12,-13,-16,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,50,50,-17,]),'AND':([4,7,9,11,29,30,33,34,35,36,38,39,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[-16,-22,51,-11,-14,-15,-37,-53,-54,-55,-12,-13,-16,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,51,-17,]),'OR':([4,7,9,11,29,30,33,34,35,36,38,39,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,],[-16,-22,52,-11,-14,-15,-37,-53,-54,-55,-12,-13,-16,-23,-22,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-17,]),'RPAREN':([14,15,16,17,56,],[-43,-44,-45,-46,73,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'global_declaration_list':([0,],[2,]),'global_declaration':([0,2,],[3,37,]),'postfix_expression':([0,2,12,13,25,40,41,42,43,44,45,46,47,48,49,50,51,52,73,],[4,4,54,54,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'type_specifier':([0,2,24,],[5,5,56,]),'assignment_operator':([0,2,],[6,6,]),'cast_expression':([0,2,25,40,41,42,43,44,45,46,47,48,49,50,51,52,73,],[7,7,57,60,60,60,60,60,60,60,60,60,60,60,60,60,74,]),'unary_expression':([0,2,12,13,],[8,8,53,55,]),'binary_expression':([0,2,40,41,42,43,44,45,46,47,48,49,50,51,52,],[9,9,59,61,62,63,64,65,66,67,68,69,70,71,72,]),'constant_expression':([0,2,],[10,10,]),'primary_expression':([0,2,12,13,25,40,41,42,43,44,45,46,47,48,49,50,51,52,73,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'unary_operator':([0,2,12,13,],[25,25,25,25,]),'identifier':([0,2,12,13,25,40,41,42,43,44,45,46,47,48,49,50,51,52,73,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'constant':([0,2,12,13,25,40,41,42,43,44,45,46,47,48,49,50,51,52,73,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> global_declaration_list','program',1,'p_program','uc_parser.py',50),
  ('global_declaration_list -> global_declaration','global_declaration_list',1,'p_global_declaration_list','uc_parser.py',56),
  ('global_declaration_list -> global_declaration_list global_declaration','global_declaration_list',2,'p_global_declaration_list','uc_parser.py',57),
  ('global_declaration -> postfix_expression','global_declaration',1,'p_global_declaration','uc_parser.py',63),
  ('global_declaration -> type_specifier','global_declaration',1,'p_global_declaration','uc_parser.py',64),
  ('global_declaration -> assignment_operator','global_declaration',1,'p_global_declaration','uc_parser.py',65),
  ('global_declaration -> cast_expression','global_declaration',1,'p_global_declaration','uc_parser.py',66),
  ('global_declaration -> unary_expression','global_declaration',1,'p_global_declaration','uc_parser.py',67),
  ('global_declaration -> binary_expression','global_declaration',1,'p_global_declaration','uc_parser.py',68),
  ('global_declaration -> constant_expression','global_declaration',1,'p_global_declaration','uc_parser.py',69),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','uc_parser.py',74),
  ('postfix_expression -> postfix_expression PLUS_PLUS','postfix_expression',2,'p_postfix_expression_2','uc_parser.py',79),
  ('postfix_expression -> postfix_expression MINUS_MINUS','postfix_expression',2,'p_postfix_expression_2','uc_parser.py',80),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression','uc_parser.py',85),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression','uc_parser.py',86),
  ('cast_expression -> postfix_expression','cast_expression',1,'p_cast_expression_1','uc_parser.py',91),
  ('cast_expression -> LPAREN type_specifier RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','uc_parser.py',96),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','uc_parser.py',101),
  ('unary_expression -> PLUS_PLUS unary_expression','unary_expression',2,'p_unary_expression_2','uc_parser.py',106),
  ('unary_expression -> MINUS_MINUS unary_expression','unary_expression',2,'p_unary_expression_2','uc_parser.py',107),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','uc_parser.py',108),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','uc_parser.py',113),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','uc_parser.py',114),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','uc_parser.py',115),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','uc_parser.py',116),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','uc_parser.py',117),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','uc_parser.py',118),
  ('binary_expression -> binary_expression SMALLER binary_expression','binary_expression',3,'p_binary_expression','uc_parser.py',119),
  ('binary_expression -> binary_expression SMALLER_EQUAL binary_expression','binary_expression',3,'p_binary_expression','uc_parser.py',120),
  ('binary_expression -> binary_expression BIGGER binary_expression','binary_expression',3,'p_binary_expression','uc_parser.py',121),
  ('binary_expression -> binary_expression BIGGER_EQUAL binary_expression','binary_expression',3,'p_binary_expression','uc_parser.py',122),
  ('binary_expression -> binary_expression EQUAL binary_expression','binary_expression',3,'p_binary_expression','uc_parser.py',123),
  ('binary_expression -> binary_expression DIFFERENT binary_expression','binary_expression',3,'p_binary_expression','uc_parser.py',124),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','uc_parser.py',125),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','uc_parser.py',126),
  ('constant_expression -> binary_expression','constant_expression',1,'p_constant_expression','uc_parser.py',134),
  ('identifier -> ID','identifier',1,'p_identifier','uc_parser.py',139),
  ('unary_operator -> UPPERSAND','unary_operator',1,'p_unary_operator','uc_parser.py',145),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','uc_parser.py',146),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','uc_parser.py',147),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','uc_parser.py',148),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','uc_parser.py',149),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','uc_parser.py',154),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','uc_parser.py',155),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','uc_parser.py',156),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','uc_parser.py',157),
  ('assignment_operator -> ASSIGN','assignment_operator',1,'p_assignment_operator','uc_parser.py',163),
  ('assignment_operator -> ASSIGN_TIMES','assignment_operator',1,'p_assignment_operator','uc_parser.py',164),
  ('assignment_operator -> ASSIGN_DIVIDE','assignment_operator',1,'p_assignment_operator','uc_parser.py',165),
  ('assignment_operator -> ASSIGN_REMAINDER','assignment_operator',1,'p_assignment_operator','uc_parser.py',166),
  ('assignment_operator -> ASSIGN_PLUS','assignment_operator',1,'p_assignment_operator','uc_parser.py',167),
  ('assignment_operator -> ASSIGN_MINUS','assignment_operator',1,'p_assignment_operator','uc_parser.py',168),
  ('constant -> INT_CONST','constant',1,'p_constant_1','uc_parser.py',174),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','uc_parser.py',180),
  ('constant -> STRING_CONST','constant',1,'p_constant_3','uc_parser.py',186),
]

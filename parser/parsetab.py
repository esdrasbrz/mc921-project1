
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSleftTIMESAND ASSERT ASSIGN ASSIGN_DIVIDE ASSIGN_MINUS ASSIGN_PLUS ASSIGN_REMAINDER ASSIGN_TIMES BIGGER BIGGER_EQUAL BREAK CCOMMENT CHAR COMMA DIFFERENT DIVIDE ELSE EQUAL FLOAT FLOAT_CONST FOR ID IF INT INT_CONST LBRACES LBRACKET LPAREN MINUS MINUS_MINUS NOT NUMBER OR PLUS PLUS_PLUS PRINT QUESTION RBRACES RBRACKET READ RETURN RPAREN SEMI SMALLER SMALLER_EQUAL STRING_CONST TIMES UCCCOMMENT UPPERSAND VOID WHILE program  : global_declaration_list\n         global_declaration_list : global_declaration\n                                    | global_declaration_list global_declaration\n         global_declaration : constant\n                               | type_specifier\n                               | assignment_operator\n                               | unary_operator\n                               | identifier\n         identifier  : ID\n         unary_operator : UPPERSAND\n                           | TIMES\n                           | PLUS\n                           | MINUS\n                           | NOT\n         type_specifier : VOID\n                           | CHAR\n                           | INT\n                           | FLOAT\n         assignment_operator : ASSIGN\n                                | ASSIGN_TIMES\n                                | ASSIGN_DIVIDE\n                                | ASSIGN_REMAINDER\n                                | ASSIGN_PLUS\n                                | ASSIGN_MINUS\n         constant : INT_CONST\n         constant : FLOAT_CONST\n         constant : STRING_CONST\n        '
    
_lr_action_items = {'INT_CONST':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,],[9,9,-2,-4,-5,-6,-7,-8,-25,-26,-27,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,-11,-12,-13,-14,-9,-3,]),'FLOAT_CONST':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,],[10,10,-2,-4,-5,-6,-7,-8,-25,-26,-27,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,-11,-12,-13,-14,-9,-3,]),'STRING_CONST':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,],[11,11,-2,-4,-5,-6,-7,-8,-25,-26,-27,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,-11,-12,-13,-14,-9,-3,]),'VOID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,],[12,12,-2,-4,-5,-6,-7,-8,-25,-26,-27,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,-11,-12,-13,-14,-9,-3,]),'CHAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,],[13,13,-2,-4,-5,-6,-7,-8,-25,-26,-27,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,-11,-12,-13,-14,-9,-3,]),'INT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,],[14,14,-2,-4,-5,-6,-7,-8,-25,-26,-27,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,-11,-12,-13,-14,-9,-3,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,],[15,15,-2,-4,-5,-6,-7,-8,-25,-26,-27,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,-11,-12,-13,-14,-9,-3,]),'ASSIGN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,],[16,16,-2,-4,-5,-6,-7,-8,-25,-26,-27,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,-11,-12,-13,-14,-9,-3,]),'ASSIGN_TIMES':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,],[17,17,-2,-4,-5,-6,-7,-8,-25,-26,-27,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,-11,-12,-13,-14,-9,-3,]),'ASSIGN_DIVIDE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,],[18,18,-2,-4,-5,-6,-7,-8,-25,-26,-27,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,-11,-12,-13,-14,-9,-3,]),'ASSIGN_REMAINDER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,],[19,19,-2,-4,-5,-6,-7,-8,-25,-26,-27,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,-11,-12,-13,-14,-9,-3,]),'ASSIGN_PLUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,],[20,20,-2,-4,-5,-6,-7,-8,-25,-26,-27,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,-11,-12,-13,-14,-9,-3,]),'ASSIGN_MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,],[21,21,-2,-4,-5,-6,-7,-8,-25,-26,-27,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,-11,-12,-13,-14,-9,-3,]),'UPPERSAND':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,],[22,22,-2,-4,-5,-6,-7,-8,-25,-26,-27,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,-11,-12,-13,-14,-9,-3,]),'TIMES':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,],[23,23,-2,-4,-5,-6,-7,-8,-25,-26,-27,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,-11,-12,-13,-14,-9,-3,]),'PLUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,],[24,24,-2,-4,-5,-6,-7,-8,-25,-26,-27,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,-11,-12,-13,-14,-9,-3,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,],[25,25,-2,-4,-5,-6,-7,-8,-25,-26,-27,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,-11,-12,-13,-14,-9,-3,]),'NOT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,],[26,26,-2,-4,-5,-6,-7,-8,-25,-26,-27,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,-11,-12,-13,-14,-9,-3,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,],[27,27,-2,-4,-5,-6,-7,-8,-25,-26,-27,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,-11,-12,-13,-14,-9,-3,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,],[0,-1,-2,-4,-5,-6,-7,-8,-25,-26,-27,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,-11,-12,-13,-14,-9,-3,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'global_declaration_list':([0,],[2,]),'global_declaration':([0,2,],[3,28,]),'constant':([0,2,],[4,4,]),'type_specifier':([0,2,],[5,5,]),'assignment_operator':([0,2,],[6,6,]),'unary_operator':([0,2,],[7,7,]),'identifier':([0,2,],[8,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> global_declaration_list','program',1,'p_program','uc_parser.py',37),
  ('global_declaration_list -> global_declaration','global_declaration_list',1,'p_global_declaration_list','uc_parser.py',42),
  ('global_declaration_list -> global_declaration_list global_declaration','global_declaration_list',2,'p_global_declaration_list','uc_parser.py',43),
  ('global_declaration -> constant','global_declaration',1,'p_global_declaration','uc_parser.py',49),
  ('global_declaration -> type_specifier','global_declaration',1,'p_global_declaration','uc_parser.py',50),
  ('global_declaration -> assignment_operator','global_declaration',1,'p_global_declaration','uc_parser.py',51),
  ('global_declaration -> unary_operator','global_declaration',1,'p_global_declaration','uc_parser.py',52),
  ('global_declaration -> identifier','global_declaration',1,'p_global_declaration','uc_parser.py',53),
  ('identifier -> ID','identifier',1,'p_identifier','uc_parser.py',59),
  ('unary_operator -> UPPERSAND','unary_operator',1,'p_unary_operator','uc_parser.py',64),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','uc_parser.py',65),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','uc_parser.py',66),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','uc_parser.py',67),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','uc_parser.py',68),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','uc_parser.py',74),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','uc_parser.py',75),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','uc_parser.py',76),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','uc_parser.py',77),
  ('assignment_operator -> ASSIGN','assignment_operator',1,'p_assignment_operator','uc_parser.py',82),
  ('assignment_operator -> ASSIGN_TIMES','assignment_operator',1,'p_assignment_operator','uc_parser.py',83),
  ('assignment_operator -> ASSIGN_DIVIDE','assignment_operator',1,'p_assignment_operator','uc_parser.py',84),
  ('assignment_operator -> ASSIGN_REMAINDER','assignment_operator',1,'p_assignment_operator','uc_parser.py',85),
  ('assignment_operator -> ASSIGN_PLUS','assignment_operator',1,'p_assignment_operator','uc_parser.py',86),
  ('assignment_operator -> ASSIGN_MINUS','assignment_operator',1,'p_assignment_operator','uc_parser.py',87),
  ('constant -> INT_CONST','constant',1,'p_constant_1','uc_parser.py',92),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','uc_parser.py',97),
  ('constant -> STRING_CONST','constant',1,'p_constant_3','uc_parser.py',102),
]
